(()=>{"use strict";function n(...n){const t={};return this.forEach((i=>{const r=function(t){const i=[];return n.forEach((n=>{const r=n(t);null!==r&&i.push(r)})),i}(i);r.forEach((n=>{n in t||(t[n]=[]),t[n].push(i)}))})),t}function t(n){return t=>n&&"function"==typeof n?n(t):t}function i(n=null){const i=t(n),r={};return this.reduce(((n,t,e)=>{const u=i(t);return u in r?n:(r[u]=!0,[...n,t])}),[])}function r(n=null){const i=t(n);return this.reduce(((n,t,r)=>0===r?[this[0]]:i(t)===i(this[r-1])?n:[...n,t]),[])}function e(n,t=!0){if(0===this.length)return[];const i=this.findIndex((t=>"function"==typeof n?n(t):t===n));return-1===i?this:this.slice(0,i+(t?1:0))}function u(n,t,i,r=!0){const e=[];let u=i;for(let i in this){const l=this[i];if(u=t(u,l,i),n(u,l,+i)){r&&e.push(l);break}e.push(l)}return e}function l(n,t=!0){if(0===this.length)return[];const i=this.findIndex((t=>"function"==typeof n?n(t):t===n));return-1===i?[]:this.slice(i+(t?0:1))}function s(n,t,i,r=!0){const e=[];let u=i;for(let i in this){const l=this[i];if(u=t(u,l,i),n(u,l,+i)){r||e.push(l);break}e.push(l)}return this.slice(e.length)}function h(n){let t=null;function i(t){return"function"==typeof n?n(t):t===n}for(let n in this)if(i(this[n])){t=[+n,this[n]];break}return t}function o(n){let t=[];return this.forEach(((i,r)=>{(function(t){return"function"==typeof n?n(t):t===n})(i)&&t.push([r,i])})),t}function c(n=null){t(n);const i=this.x.findMinIndex(n);return-1===i?null:[i,this[i]]}function f(n=null){t(n);const i=this.x.findMaxIndex(n);return-1===i?null:[i,this[i]]}function d(n=null){const i=t(n);return 0===this.length?null:1===this.length?i(this[0]):this.reduce(((n,t,r)=>{const e=1===r?i(n):n;return Math.min(i(t),e)}))}function a(n=null){return 0===this.length?null:n?this.reduce(((t,i)=>n(i)<n(t)?i:t)):Math.min(...this)}function g(n,t,i=null,r){const e=[(n,r,e,u)=>{let l=t(n,r,e,u);return i&&e===u.length-1&&(l=i(l,u)),l}];return void 0!==r&&e.push(r),n.reduce(...e)}function p(n=null){const i=t(n);return 0===this.length?-1:1===this.length?0:g(this,((n,t,r)=>{if(1===r)return i(t)<i(n)?[t,1]:[n,0];let[e]=n;return i(t)<i(e)?[t,r]:n}),(([,n])=>n))}function b(n=null){const i=t(n);return 0===this.length?null:1===this.length?i(this[0]):this.reduce(((n,t,r)=>{const e=1===r?i(n):n;return Math.max(i(t),e)}))}function y(n=null){return 0===this.length?null:n?this.reduce(((t,i)=>n(i)>n(t)?i:t)):Math.max(...this)}function A(n=null){const i=t(n);return 0===this.length?-1:1===this.length?0:g(this,((n,t,r)=>{if(1===r)return i(t)>i(n)?[t,1]:[n,0];let[e]=n;return i(t)>i(e)?[t,r]:n}),(([,n])=>n))}function x(n){return this.reduce(((t,i)=>{return t+(r=i,("function"==typeof n?n(r):r===n)?1:0);var r}),0)}function M(n=null){const i=t(n);return 0===this.length?null:g(this.map((n=>i(n))),((n,t)=>n+t),((n,t)=>n/t.length))}function m(n=[],i=null){const r=t(i);if(0===this.length)return null;let e;Array.isArray(n)&&(e=function(n,t){if(n<=t.length)return t;const i=new Array(n).fill(1);return i.splice(0,t.length,...t),i}(this.length,n));let u=0;return g(this,((t,i,l)=>{const s=function(t,i){return Array.isArray(e)?e[i]:"function"==typeof n?n(t):void 0}(i,l);return u+=s,t+r(i)*s}),(n=>n/u),0)}function z(...n){if(0===this.length||0===n.length)return[];let t=this.length;const i=n.filter((n=>!!Array.isArray(n)&&(t=Math.min(t,n.length),!0))),r=[];for(let n=0;n<t;n++){const t=i.map((t=>t[n]));r.push([this[n],...t])}return r}function v(...n){if(0===n.length)return null;let t=this.length>0,i=this.length;const r=n.filter((n=>!!Array.isArray(n)&&(i=Math.max(i,n.length),t||=n.length>0,!0)));if(!t)return[];const e=[];for(let n=0;n<i;n++){const t=r.map((t=>t[n]));e.push([this[n],...t])}return e}function I(){if(0===this.length)return[];let n;return this.filter((t=>!!Array.isArray(t)&&(n=void 0===n?t.length:Math.min(n,t.length),!0))).reduce(((t,i)=>{for(let r=0;r<n;r++)Array.isArray(t[r])||(t[r]=[]),t[r].push(i[r]);return t}),[])}function k(){if(0===this.length)return[];let n;return this.filter((t=>!!Array.isArray(t)&&(n=void 0===n?t.length:Math.max(n,t.length),!0))).reduce(((t,i)=>{for(let r=0;r<n;r++)Array.isArray(t[r])||(t[r]=[]),t[r].push(i[r]);return t}),[])}Object.defineProperty(Array.prototype,"x",{get(){const t=this;return{group:n.bind(t),uniq:i.bind(t),uniqSeq:r.bind(t),collectUntil:e.bind(t),collectUntilReduce:u.bind(t),skipUntil:l.bind(t),skipUntilReduce:s.bind(t),localize:h.bind(t),localizeAll:o.bind(t),localizeMin:c.bind(t),localizeMax:f.bind(t),min:d.bind(t),findMin:a.bind(t),findMinIndex:p.bind(t),max:b.bind(t),findMax:y.bind(t),findMaxIndex:A.bind(t),count:x.bind(t),avg:M.bind(t),wavg:m.bind(t),zip:z.bind(t),zipAll:v.bind(t),unzip:I.bind(t),unzipAll:k.bind(t)}}})})();