export default function move(idx, count, targetIdx) {
  const prepareTargetIndex = idx => {
    if (idx >= 0) return idx;
    return this.length + idx;
  };

  const c = [...this];
  const slice = c.splice(idx, count);

  c.splice(
    prepareTargetIndex(targetIdx),
    0,
    ...slice
  );

  return c;
}


/*



*/


/*
move([1,2,3,4,5,6], 2, 2, -1)
(6) [1, 2, 5, 6, 3, 4]
move([1,2,3,4,5,6], 2, 2, -2)
(6) [1, 2, 5, 6, 3, 4]
move([1,2,3,4,5,6], 2, 2, -3)
(6) [1, 2, 5, 3, 4, 6]
move([1,2,3,4,5,6], 2, 2, -30)
(6) [3, 4, 1, 2, 5, 6]
move([1,2,3,4,5,6], 2, 2, 30)
(6) [1, 2, 5, 6, 3, 4]
move([1,2,3,4,5,6], 2, 2, 0)
(6) [3, 4, 1, 2, 5, 6]
move([1,2,3,4,5,6], 2, 2, 1)
(6) [1, 3, 4, 2, 5, 6]

move([1,2,3,4,5,6], 2, 0, 2)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], 2, -2, 2)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], 2, 1, 3)
(6) [1, 2, 4, 3, 5, 6]
move([1,2,3,4,5,6], -2, 1, 3)
(6) [1, 2, 3, 5, 4, 6]
move([1,2,3,4,5,6], -2, 1, 2)
(6) [1, 2, 5, 3, 4, 6]
move([1,2,3,4,5,6], -2, 1, -2)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], -2, 1, -1)
(6) [1, 2, 3, 4, 6, 5]

move([1,2,3,4,5,6], 0, 4, -1)
(6) [5, 6, 1, 2, 3, 4]
move([1,2,3,4,5,6], -4, 4, 0)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -2)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], -4, 4, -1)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], -4, 4, -3)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], -4, 4, -4)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], -4, 4, -5)
(6) [1, 3, 4, 5, 6, 2]
move([1,2,3,4,5,6], -4, 4, -6)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -7)
(6) [1, 3, 4, 5, 6, 2]
move([1,2,3,4,5,6], -4, 4, -8)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -9)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -10)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -11)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, -12)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], -4, 4, 8)
(6) [1, 2, 3, 4, 5, 6]
move([1,2,3,4,5,6], 0, 2, 8)
(6) [3, 4, 5, 6, 1, 2]
move([1,2,3,4,5,6], 0, 2, 10)
(6) [3, 4, 5, 6, 1, 2]

??:
move([1,2,3,4,5,6], 2, 2, -30)
(6) [3, 4, 1, 2, 5, 6]

[al]locate/place([1,2,3,4,5,6], 2, 2, -30)
(6) [1, 2, 5, 6]

----

move([1,2,3,4,5,6], 0, 2, -1)
(6) [3, 4, 5, 6, 1, 2]

allocate([1,2,3,4,5,6], 0, 2, -1)
(6) [2, 3, 4, 5, 6]

----
----

+ moveBy() [?]
*/